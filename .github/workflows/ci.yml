name: DotNetTemplates-CI
# Builds and test GoC.WebTemplate.sln solution
# Requires secret variable CI_SIGNING_KEY_SNK which must be a base64 encoded byte array that will be used to generate the SNK file.
#   A throw-away (which is fine for Ci builds) key can be generated with (VS prompt): 
#         sn.exe -k ./mykey.snk
#   Secret Variable's value can be created in powershell with:
#         $pfx_cert = Get-Content 'mykey.snk' -Encoding Byte
#         [System.Convert]::ToBase64String($pfx_cert)

on:
  push:
    branches-ignore:
      - "dependabot/**"
  pull_request:
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          3.1.x
          5.0.x
          6.0.x

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1
      with:
        nuget-version: '6.0.x'
    - name: Nuget Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.nuget/packages
          ./packages
        #key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.config', '**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
      
    - name: Restore dependencies
      # Note that is "nuget restore" and not "dotnet restore" (for now)
      run: nuget restore GoC.WebTemplate.sln -NonInteractive -Verbosity normal

    - name: Create SNK
      # Creates throw-away SNK file from hard-coded value (created key is not meant for deployment)
      run: |
        [IO.File]::WriteAllBytes("GoC.WebTemplate.snk", [System.Convert]::FromBase64String("BwIAAAAkAABSU0EyAAQAAAEAAQANuXrKlXvUoiLVNYZHLd7nu2KrubMglyf/v8elReB9LDL6Cr2ThW65Vzqr4yAB4HGEBFNiftVBmhFkqZy1NjqkRRwSwB8XkcaiQDsHUcj1PYbqdVqpGaW5TeVfMXEyWQ6E/ewlB6M8jMhXa5KdnVHW+lNsd9EoXXFe4SGhJlAJsX+BWix44+BO2bwzMlfDa3u3AD0cH4pxaKM2eAzKFgTkRRJOHzeQ+GZTwt8WTEzlJ3G1LoNIwhTPMzEA8Q8VO+Fz85lwv36aVDVbiYrasG962RYuIJ8akUOHt8OGRiMobwWXRWcJgyzRe7FT1kzu/m/Eq1ESQtaD7p0JDA2ZvjjJEeP2q2LGcI93PoFOw64b8wnt2Bc1SiDL5jOleiFJC0JZs6uw4k038bUHH5jWFKTFmz//N0lPXzEK6wkhVzjpW1Et+T1hmIK4ymTvS9hkHPm3n2JnyanrjS7fO1qJmlYLu4NBmX/R2NMhccNPMsQNM4fqsjNEv4DP8kC7inEdiWQkWsZdgTCEsbBynpw2agZP5ZmfJ+0dtaAT9cxayzFspgUQa/ArxYrpCIqtv2P0w5cCSFT9H6SVk+t1K3qzTYDVlXyTtBOAN/Ud5nXfAvmSdMgW+TcR/xtscH1hHe9pTYrev1CRUa2Nj4yYA26RL0qHQ2AHc4PHOexCOG2UPHyLVMoTgD4VxSD0yDg3DGOmjgF3EB0HEjGoqC3FTu64epfQBZz2fQbdmogsqnwIJbqE2KS8q9BhKyCNOMN8Xl4dp7A="))

    - name: Build Solution
      #run: dotnet build --no-restore
      run: msbuild GoC.WebTemplate.sln /p:Configuration=Release

    - name: Test Components
      run: dotnet test Components.Tests --no-build --configuration Release --verbosity normal

    - name: Test Components.Core
      run: dotnet test Components.Core.Tests --no-build --configuration Release --verbosity normal

    - name: Test Components.Framework
      run: |
        & packages\xunit.runner.console.2.9.3\tools\net461\xunit.console.exe Components.Framework.Tests\bin\Release\GoC.WebTemplate.Components.Framework.Tests.dll
